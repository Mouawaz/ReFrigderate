@page "/"
@inject IJSRuntime JSRuntime
@using BlazorApp.Components.Services
@inject IIngredientService IngredientService

<link href="css/lobby.css?version=0.1" rel="stylesheet" />
<div class="page-container">
    <div class="header">
        <h1>Ingredients</h1>
        <div class="header-controls">
            <div class="search-box">
                <img class="ingredientt" src="Images/search.png" alt="search"/>
                <input type="text" placeholder="Search..."/>
            </div>
            
        </div>
    </div>

    <div class="items-grid">
        @foreach (var ingredient in ingredients)
        {
            <div class="item-card">
                <div class="item-metadata">
                    <div class="meta-item">@ingredient.DaysUntilBad</div>
                    <div class="meta-item">@ingredient.Amount</div>
                    <div class="notification-bell">
                        <i>üîî</i>
                        <span class="glyphicon glyphicon-bell"></span>
                    </div>
                </div>

                <div class="item-image">
                    <div class="placeholder-image">‚ùå</div>
                </div>

                <div class="item-name">
                    @ingredient.Name
                </div>

                <div class="item-actions">
                    <Button Icon="editing.png" Text="Edit"></Button>
                </div>
            </div>
        }
    </div>
    <div>
        @foreach (var ingredient in ingredients)
        {
        <li> @ingredient.Name</li>
        }
    </div>
</div>


@page "/Lobby"
@using APIContracts.IngridientDtos
@using BlazorApp1.Services
<h3>Lobby</h3>

@code {
    private string searchText = "";
    private List<ItemModel> items = new();
    private List<IngredientDto> ingredients = new();

    protected override async Task OnInitializedAsync()
    {
        // sample
        items = new List<ItemModel>
        {
            new ItemModel
            {
                Name = "Carrot",
                Days = "7d",
                Weight = "21kg"
            },
            new ItemModel
            {
                Name = "Potato",
                Days = "14d",
                Weight = "100kg"
            },
            new ItemModel
            {
                Name = "Guza",
                
            }
            //  more items here 
        };
        try
        {
            ingredients = await IngredientService.GetIngredientsAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine($"Error fetching ingredients: {e.Message} ");
            throw;
        }
    }

    public class ItemModel
    {
        public string Name { get; set; }
        public string Days { get; set; }
        public string Weight { get; set; }
    }

}
