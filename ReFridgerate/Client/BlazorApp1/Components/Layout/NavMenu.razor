@using BlazorApp1.Components.Pages.Auth
@using BlazorApp1.Services
@using Microsoft.AspNetCore.Http.HttpResults
@inject AuthenticationStateProvider AuthProvider
@inject IThemeState ThemeState

<div class="@(ThemeState.IsDarkMode ? "dark" : "light")">
    <div class="top-row ps-3 navbar">
        <div class="container-fluid">
            <a class="navbar-brand logo-title" href=""><b>ReFridgerate</b></a>
            <img class="icon-img" src="Images/fridge.png" alt="fridge"/>
        </div>
    </div>

    <input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

    <div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
        <nav>
            <div class="main-menu">
                <div class="nav-item">
                    <NavLink class="nav-link" href="">
                        <img class="icon-img" src="Images/home.png" alt="home"/>
                        <span>Home</span>
                    </NavLink>
                </div>
                <div class="nav-item">
                    <NavLink class="nav-link" href="lobby">
                        <img class="icon-img" src="Images/grocery-bag.png" alt="ingredients"/>
                        <span>Ingredients</span>
                    </NavLink>
                </div>
                <div class="nav-item">
                    <NavLink class="nav-link" href="recipe">
                        <img class="icon-img" src="Images/recipe.png" alt="ingredients"/>
                        <span>Recipes</span>
                    </NavLink>
                </div>
                <div class="nav-item">
                    <NavLink class="nav-link" href="orders">
                        <img class="icon-img" src="Images/r.png" alt="help"/>
                        <span>Orders</span>
                    </NavLink>
                </div>
                <div class="nav-item">
                    <NavLink class="nav-link" href="menu">
                        <img class="icon-img" src="Images/Chef.png" alt="Chef"/>
                        <span>Chef Menu</span>
                    </NavLink>
                </div>
                <div class="nav-item">
                    <NavLink class="nav-link" href="Waitermenu">
                        <img class="icon-img" src="Images/Waiter.png" alt="Waiter"/>
                        <span>Waiter Page</span>
                    </NavLink>
                </div>
            </div>

            <div class="bottom-menu">
                <div class="nav-item">
                    <Button
                        CustomClass="nav-link w-100 theme-toggle-nav"
                        OnClick="(() => Logout())"
                        Secondary="true">
                        <img class="icon-img" src="Images/logout.png" alt="Logout"/>
                        <span>Logout</span>
                    </Button>
                </div>
                <div class="nav-item">
                    <Button
                        CustomClass="nav-link w-100 theme-toggle-nav"
                        OnClick="@(async (e) => await ToggleTheme())"
                        Secondary="true">
                        <img class="icon-img" src="@(ThemeState.IsDarkMode ? "Images/moon.png" : "Images/sun.png")" alt="theme"/>
                        <span>@(ThemeState.IsDarkMode ? "Dark Mode" : "Light Mode")</span>
                    </Button>
                </div>
                <div class="nav-item">
                    <NavLink class="nav-link" href="admin">
                        <img class="icon-img" src="Images/admin.png" alt="admin"/>
                        <span>Admin</span>
                    </NavLink>
                </div>
            </div>
        </nav>
    </div>
</div>

@code {
    protected override Task OnInitializedAsync() {
        ThemeState.OnThemeChange += async () => { await InvokeAsync(StateHasChanged); };
        return Task.CompletedTask;
    }
    
    public void Dispose()
    {
        ThemeState.OnThemeChange -= async () => await InvokeAsync(StateHasChanged);
    }
    
    private void Logout() {
        ((SimpleAuthProvider)AuthProvider).Logout();
    }

    private Task ToggleTheme()
    {
        ThemeState.IsDarkMode = !ThemeState.IsDarkMode;
        return Task.CompletedTask;
    }
}