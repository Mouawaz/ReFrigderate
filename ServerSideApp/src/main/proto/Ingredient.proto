syntax = "proto3";

option java_package = "Server";

message Empty {}

enum IngredientCategory {
  MEAT = 0;
  POULTRY = 1;
  VEGETABLE = 2;
  FRUIT = 3;
  LEGUME = 4;
  DAIRY = 5;
}

message Ingredient {
  int32 id = 1;
  string name = 2;
  float cost = 3;
  int32 amount = 4;
  int32 daysUntilBad = 5;
  int32 amountStatus = 6;
  // 1 -> Everything is ok!
  // 2 -> Ingredient amount medium (yellow)
  // 3 -> Ingredient amount low (red)
  int32 expirationStatus = 7;
  // 1 -> Everything is ok!
  // 2 -> Ingredient about to go bad (yellow)
  // 3 -> Ingredient has went bad (red)
  IngredientCategory category = 8;  // Added field for ingredient category
}

message AllIngredientResponse {
  repeated Ingredient messages = 1;
}

message UpdateIngredientRequest {
  int32 id = 1;
  int32 difference = 2;
  int32 daysUntilBad = 3;
}

message UpdateWarningAmountsRequest {
  int32 ingredientId = 1;
  int32 yellowAmount = 2;
  int32 redAmount = 3;
  int32 yellowDaysUntil = 4;
  int32 redDaysUntil = 5;
}

//message CreateIngredientRequest {
//  string name = 1;
//  float cost = 2;
//  IngredientCategory category = 3;
//  int32 yellowAmount = 4;
//  int32 redAmount = 5;
//  int32 yellowDaysUntil = 6;
//  int32 redDaysUntil = 7;
//}

message Success {
  bool success = 1;
}

message IdRequest {
  int32 Id = 1;
}
message CreateIngredientRequest {
  string Name = 1;
  string category = 2;
  float cost = 3;
}

service IngredientService {
  rpc GetAllIngredients(Empty) returns (AllIngredientResponse);
  rpc UpdateIngredient(UpdateIngredientRequest) returns (Ingredient);
  rpc CreateIngredient(CreateIngredientRequest) returns (Ingredient);
  rpc UpdateWarningAmount(UpdateWarningAmountsRequest) returns (Success);
  rpc GetTreshold(IdRequest) returns (UpdateWarningAmountsRequest);
  //rpc CreateIngredient(CreateIngredientRequest) returns (Ingredient);  // Added new RPC for creating ingredients
}

//service UserService {
//  rpc GetUser(UserIdRequest) returns (User); // Defines a gRPC service that is then compiled into the protobuf
//}